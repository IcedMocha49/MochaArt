{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/Rose_Shop/rose-store/src/reduxActions/userSlice.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAE;AAC3BE,EAAAA,IAAI,EAAE,MADqB;AAE3BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,WAAW,EAAE,IADJ;AAETC,IAAAA,UAAU,EAAE,KAFH;AAGTC,IAAAA,KAAK,EAAE;AAHE,GAFc;AAO3BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,UAAU,EAAEC,KAAD,IAAS;AAChBA,MAAAA,KAAK,CAACJ,UAAN,GAAiB,IAAjB;AACH,KAHI;AAILK,IAAAA,YAAY,EAAC,CAACD,KAAD,EAAQE,MAAR,KAAiB;AAC1BF,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAoBO,MAAM,CAACC,OAA3B;AACH,KAPI;AAQLC,IAAAA,YAAY,EAAEJ,KAAD,IAAS;AAClBA,MAAAA,KAAK,CAACJ,UAAN,GAAiB,KAAjB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACH;AAXI;AAPkB,CAAF,CAA7B;AAsBA,OAAO,MAAM;AAACE,EAAAA,UAAD;AAAaE,EAAAA,YAAb;AAA2BG,EAAAA;AAA3B,IAA2CZ,SAAS,CAACa,OAA3D;AACP,eAAeb,SAAS,CAACc,OAAzB","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice ({\r\n    name: \"user\", \r\n    initialState:{\r\n        currentUser: null, \r\n        isFetching: false,\r\n        error: false\r\n    },\r\n    reducers:{\r\n        loginStart:(state)=>{\r\n            state.isFetching=true\r\n        },\r\n        loginSuccess:(state, action)=>{\r\n            state.isFetching = false;\r\n            state.currentUser = action.payload\r\n        },\r\n        loginFailure:(state)=>{\r\n            state.isFetching=false;\r\n            state.error = true;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {loginStart, loginSuccess, loginFailure} = userSlice.actions;\r\nexport default userSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}