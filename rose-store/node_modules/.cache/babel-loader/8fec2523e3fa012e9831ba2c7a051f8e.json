{"ast":null,"code":"import cartReducer from \"./cartRedux\";\nimport userReducer from \"./userRedux\";\nimport { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/Rose_Shop/rose-store/src/reduxActions/store.js"],"names":["cartReducer","userReducer","configureStore","combineReducers","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","user","cart","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAAQC,cAAR,EAAwBC,eAAxB,QAA+C,kBAA/C;AAEA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASS,eATT;AAUE,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBC,EAAAA,OAAO,EAAE,CAFW;AAGpBH,EAAAA;AAHoB,CAAtB;AAMF,MAAMI,WAAW,GAAGb,eAAe,CAAC;AAAEc,EAAAA,IAAI,EAAEhB,WAAR;AAAqBiB,EAAAA,IAAI,EAAElB;AAA3B,CAAD,CAAnC;AAEA,MAAMmB,gBAAgB,GAAGd,cAAc,CAACQ,aAAD,EAAgBG,WAAhB,CAAvC;AAEA,OAAO,MAAMI,KAAK,GAAGlB,cAAc,CAAC;AAClCmB,EAAAA,OAAO,EAAEF,gBADyB;AAElCG,EAAAA,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACnB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AAHY,CAAD,CAA5B;AAUP,OAAO,IAAIe,SAAS,GAAGtB,YAAY,CAACgB,KAAD,CAA5B","sourcesContent":["import cartReducer from \"./cartRedux\";\r\nimport userReducer from \"./userRedux\";\r\nimport {configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from \"redux-persist\";\r\n  import storage from \"redux-persist/lib/storage\";\r\n  \r\n  const persistConfig = {\r\n    key: \"root\",\r\n    version: 1,\r\n    storage,\r\n  };\r\n\r\nconst rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport let persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}