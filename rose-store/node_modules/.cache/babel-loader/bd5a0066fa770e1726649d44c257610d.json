{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      state.quantity += 1;\n      state.products.push(action.payload);\n      state.total += action.payload.price * action.payload.quantity;\n    },\n    removeProduct: (state, action) => {\n      const removeProduct = state.map(products => products.id === action.payload.id ? { ...products,\n        quantity: products.quantity - 1\n      } : products).filter(products => products.quantity > 0);\n      state.products = removeProduct; //const removeProduct = state.products.filter((product)=>{\n      //  if(product.id === payload.product.id){\n      //    return{\n      //        ...product,\n      //       quantity : product.quantity - payload.quantity\n      //   }\n      // }else{\n      // }\n      // })\n      //const removeProduct = state.products.filter((products) => products.id !== action.payload);\n      //state.products = removeProduct;\n    }\n  }\n});\nexport const {\n  addProduct,\n  removeProduct\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["C:/Users/gabri/OneDrive/Desktop/Rose_Shop/rose-store/src/redux/cartRedux.js"],"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProduct","state","action","push","payload","price","removeProduct","map","id","filter","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAE;AAC3BE,EAAAA,IAAI,EAAE,MADqB;AAE3BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,QAAQ,EAAE,CAFD;AAGTC,IAAAA,KAAK,EAAE;AAHE,GAFc;AAQ3BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAkB;AAC1BD,MAAAA,KAAK,CAACJ,QAAN,IAAiB,CAAjB;AACAI,MAAAA,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACAH,MAAAA,KAAK,CAACH,KAAN,IAAeI,MAAM,CAACE,OAAP,CAAeC,KAAf,GAAuBH,MAAM,CAACE,OAAP,CAAeP,QAArD;AACH,KALI;AAMLS,IAAAA,aAAa,EAAC,CAACL,KAAD,EAAQC,MAAR,KAAiB;AAC3B,YAAMI,aAAa,GAAGL,KAAK,CACtBM,GADiB,CACbX,QAAQ,IAAKA,QAAQ,CAACY,EAAT,KAAgBN,MAAM,CAACE,OAAP,CAAeI,EAA/B,GAAoC,EAAE,GAAGZ,QAAL;AAAeC,QAAAA,QAAQ,EAAED,QAAQ,CAACC,QAAT,GAAoB;AAA7C,OAApC,GAAuFD,QADvF,EAEjBa,MAFiB,CAEVb,QAAQ,IAAIA,QAAQ,CAACC,QAAT,GAAoB,CAFtB,CAAtB;AAGII,MAAAA,KAAK,CAACL,QAAN,GAAiBU,aAAjB,CAJuB,CAK3B;AACE;AACE;AACA;AACC;AACA;AAEF;AAEA;AACJ;AACC;AACA;AACH;AAxBI;AARkB,CAAF,CAA7B;AAoCA,OAAO,MAAM;AAACN,EAAAA,UAAD;AAAaM,EAAAA;AAAb,IAA8Bb,SAAS,CAACiB,OAA9C;AACP,eAAejB,SAAS,CAACkB,OAAzB","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice ({\r\n    name: \"cart\", \r\n    initialState:{\r\n        products: [],\r\n        quantity: 0,\r\n        total: 0,\r\n        \r\n    },\r\n    reducers:{\r\n        addProduct: (state, action) =>{\r\n            state.quantity +=1;\r\n            state.products.push(action.payload)\r\n            state.total += action.payload.price * action.payload.quantity;\r\n        },\r\n        removeProduct:(state, action)=>{\r\n            const removeProduct = state\r\n                .map(products => (products.id === action.payload.id ? { ...products, quantity: products.quantity - 1 } : products))\r\n                .filter(products => products.quantity > 0);\r\n                state.products = removeProduct;\r\n            //const removeProduct = state.products.filter((product)=>{\r\n              //  if(product.id === payload.product.id){\r\n                //    return{\r\n                //        ...product,\r\n                 //       quantity : product.quantity - payload.quantity\r\n                 //   }\r\n                    \r\n               // }else{\r\n                        \r\n               // }\r\n           // })\r\n            //const removeProduct = state.products.filter((products) => products.id !== action.payload);\r\n            //state.products = removeProduct;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {addProduct, removeProduct} = cartSlice.actions;\r\nexport default cartSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}